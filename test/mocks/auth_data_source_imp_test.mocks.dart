// Mocks generated by Mockito 5.4.2 from annotations
// in clock_in_it/test/features/auth/data/auth_data_source_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:clock_in_it/setup/http/http_client.dart' as _i4;
import 'package:clock_in_it/shared/data/data_sources/secure_local_storage/secure_local_storage.dart'
    as _i6;
import 'package:clock_in_it/shared/domain/entities/failure/failure.dart' as _i3;
import 'package:clock_in_it/shared/domain/entities/response/response.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponseApp_0<T> extends _i1.SmartFake
    implements _i2.ResponseApp<T> {
  _FakeResponseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFailure_1 extends _i1.SmartFake implements _i3.Failure {
  _FakeFailure_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ResponseApp<dynamic>> get(
    String? url, {
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#token: token},
        ),
        returnValue: _i5.Future<_i2.ResponseApp<dynamic>>.value(
            _FakeResponseApp_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [url],
            {#token: token},
          ),
        )),
      ) as _i5.Future<_i2.ResponseApp<dynamic>>);
  @override
  _i5.Future<_i2.ResponseApp<dynamic>> post(
    String? path, {
    required Map<String, dynamic>? body,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #body: body,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i2.ResponseApp<dynamic>>.value(
            _FakeResponseApp_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #body: body,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i2.ResponseApp<dynamic>>);
  @override
  _i5.Future<_i2.ResponseApp<dynamic>> put(
    String? path, {
    required Map<String, dynamic>? body,
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #body: body,
            #token: token,
          },
        ),
        returnValue: _i5.Future<_i2.ResponseApp<dynamic>>.value(
            _FakeResponseApp_0<dynamic>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #body: body,
              #token: token,
            },
          ),
        )),
      ) as _i5.Future<_i2.ResponseApp<dynamic>>);
  @override
  _i5.Future<_i2.ResponseApp<dynamic>> delete(
    String? path, {
    String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {#token: token},
        ),
        returnValue: _i5.Future<_i2.ResponseApp<dynamic>>.value(
            _FakeResponseApp_0<dynamic>(
          this,
          Invocation.method(
            #delete,
            [path],
            {#token: token},
          ),
        )),
      ) as _i5.Future<_i2.ResponseApp<dynamic>>);
  @override
  _i3.Failure handleError(Object? e) => (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [e],
        ),
        returnValue: _FakeFailure_1(
          this,
          Invocation.method(
            #handleError,
            [e],
          ),
        ),
      ) as _i3.Failure);
}

/// A class which mocks [SecureLocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureLocalStorage extends _i1.Mock
    implements _i6.SecureLocalStorage {
  MockSecureLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> set(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<String?> get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
  @override
  _i5.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
