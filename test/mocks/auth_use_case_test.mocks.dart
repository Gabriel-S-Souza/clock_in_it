// Mocks generated by Mockito 5.4.2 from annotations
// in clock_in_it/test/features/auth/domain/auth_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:clock_in_it/features/auth/domain/entities/login_credentials_entity.dart'
    as _i6;
import 'package:clock_in_it/features/auth/domain/repositories/auth_repository.dart'
    as _i3;
import 'package:clock_in_it/shared/domain/entities/result/result.dart' as _i2;
import 'package:clock_in_it/shared/domain/entities/user/user_entity.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.UserEntity>> login(
          _i6.LoginCredentialsEntity? credentials) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [credentials],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.UserEntity>>.value(
            _FakeResult_0<_i5.UserEntity>(
          this,
          Invocation.method(
            #login,
            [credentials],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.UserEntity>>);
}
